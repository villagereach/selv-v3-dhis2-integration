#%RAML 0.8
---
title: OpenLMIS SELV3 DHIS2 Integration
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
- title: Getting Started
  content: Welcome to the OpenLMIS SELV3 DHIS2 Integration Service documentation.

schemas:
- auditLogEntry: !include schemas/auditLogEntry.json
- auditLogEntryArray: |
    {
        "type": "array",
        "items": { "type": "object", "$ref": "schemas/auditLogEntry.json" }
    }
- localizedErrorResponse: !include schemas/localizedErrorResponse.json
- version: !include schemas/version.json

- server: !include schemas/server.json
- serverPage: !include schemas/serverPage.json
- dataset: !include schemas/dataset.json
- datasetPage: !include schemas/datasetPage.json
- dataElement: !include schemas/dataElement.json
- dataElementPage: !include schemas/dataElementPage.json
- dhisDatasetList: !include schemas/dhisDatasetList.json

traits:
- secured:
    queryParameters:
      access_token:
        displayName: access_token
        description: OAuth2 access token
        type: string
        required: false
        repeat: false
    headers:
      Authorization:
        displayName: Authorization
        description: OAuth2 authorization token header. Takes the form of 'Bearer <token>'.
        type: string
        required: false
        repeat: false

- paginated:
    queryParameters:
      page:
        description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined values are interpreted as zero.
        type: integer
        required: false
        repeat: false
      size:
        description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
        type: integer
        required: false
        repeat: false
- sorted:
    queryParameters:
      sort:
        description: Sorting criteria in the format "property(,asc|desc)". Default sort order is ascending. Multiple sort criteria are supported.
        type: string
        required: false
        repeat: true
resourceTypes:
- auditLog:
    description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
    get:
      description: Returns all or part of the resource's audit log
      # Although /auditLog endpoints support "page" and "number" query parameters for pagination,
      # they donâ€™t return the response body and set of pagination-related values expected to be
      # returned for core domain resources.
      is: [ paginated ]
      queryParameters:
        author:
          displayName: author
          description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
          type: string
          required: false
          repeat: false
        changedPropertyName:
          displayName: changedPropertyName
          description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
          type: string
          required: false
          repeat: false
      responses:
        200:
          headers:
            Keep-Alive:
          body:
            application/json:
              schema: auditLogEntryArray
              example: |
                [
                  {
                    "changeType": "ValueChange",
                    "globalId": {
                      "entity": "org.openlmis.SomeClass",
                      "cdoId": 1
                    },
                    "commitMetadata": {
                      "author": "SomeUserName",
                      "properties": [],
                      "commitDate": "2016-12-17T19:39:57.621",
                      "id": 3
                    },
                    "property": "PropertyName",
                    "left": "OldValue",
                    "right": "NewValue"
                  }
                ]
        404:
          description: The specified <<resourcePathName|!singularize>> does not exist.
          headers:
            Keep-Alive:
          body:
            application/json:
              schema: localizedErrorResponse
        401:
          headers:
            Keep-Alive:
          body:
            application/json:

- instanceAuditLog:
    description: This represents the audit log for a specified instance of the <<resourcePathName|!singularize>> resource.
    type: auditLog
    uriParameters:
      id:
        type: string
        required: true
        repeat: false
/dhis2:
  displayName: Version
  get:
    description: Get version
    responses:
      200:
        description: Returns version information.
        headers:
        body:
          application/json:
            schema: version

/api:
  /serverConfiguration:
    displayName: serverConfiguration
    get:
      is: [ secured, paginated, sorted ]
      description: Get all servers.
      responses:
        200:
          headers:
            Keep-Alive:
          body:
            application/json:
              schema: serverPage
        401:
          headers:
            Keep-Alive:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse
    post:
      is: [ secured ]
      description: Add new server.
      body:
        application/json:
          schema: server
      responses:
        201:
          headers:
            Keep-Alive:
          body:
            application/json:
              schema: server
        400:
          body:
            application/json:
              schema: localizedErrorResponse
        401:
          headers:
            Keep-Alive:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse
    /{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get server configuration.
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: server
          404:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            headers:
              Keep-Alive:
            body:
              application/json:
          403:
            body:
              application/json:
                schema: localizedErrorResponse
      put:
        is: [ secured ]
        description: Change server parameters.
        body:
          application/json:
            schema: server
        responses:
          200:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: server
          400:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            headers:
              Keep-Alive:
            body:
              application/json:
          403:
            body:
              application/json:
                schema: localizedErrorResponse
          404:
            body:
              application/json:
                schema: localizedErrorResponse
      delete:
        is: [ secured ]
        description: Completely removes server configuration. This action is not recoverable.
        responses:
          204:
            headers:
              Keep-Alive:
          400:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            headers:
              Keep-Alive:
            body:
              application/json:
          404:
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: localizedErrorResponse
      /datasets:
        displayName: datasets
        get:
          is: [ secured, paginated, sorted ]
          description: Get all datasets.
          responses:
            200:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: datasetPage
            401:
              headers:
                Keep-Alive:
              body:
                application/json:
            403:
              body:
                application/json:
                  schema: localizedErrorResponse
        post:
          is: [ secured ]
          description: Add new dataset.
          body:
            application/json:
              schema: dataset
          responses:
            201:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: dataset
            400:
              body:
                application/json:
                  schema: localizedErrorResponse
            401:
              headers:
                Keep-Alive:
              body:
                application/json:
            403:
              body:
                application/json:
                  schema: localizedErrorResponse
        /{id}:
          uriParameters:
            id:
              displayName: id
              type: string
              required: true
              repeat: false
          get:
            is: [ secured ]
            description: Get dataset configuration.
            responses:
              200:
                headers:
                  Keep-Alive:
                body:
                  application/json:
                    schema: dataset
              404:
                headers:
                  Keep-Alive:
                body:
                  application/json:
                    schema: localizedErrorResponse
              401:
                headers:
                  Keep-Alive:
                body:
                  application/json:
              403:
                body:
                  application/json:
                    schema: localizedErrorResponse
          put:
            is: [ secured ]
            description: Change dataset parameters.
            body:
              application/json:
                schema: dataset
            responses:
              200:
                headers:
                  Keep-Alive:
                body:
                  application/json:
                    schema: dataset
              400:
                body:
                  application/json:
                    schema: localizedErrorResponse
              401:
                headers:
                  Keep-Alive:
                body:
                  application/json:
              403:
                body:
                  application/json:
                    schema: localizedErrorResponse
              404:
                body:
                  application/json:
                    schema: localizedErrorResponse
          delete:
            is: [ secured ]
            description: Completely removes dataset. This action is not recoverable.
            responses:
              204:
                headers:
                  Keep-Alive:
              400:
                body:
                  application/json:
                    schema: localizedErrorResponse
              401:
                headers:
                  Keep-Alive:
                body:
                  application/json:
              404:
                headers:
                  Keep-Alive:
                body:
                  application/json:
                    schema: localizedErrorResponse
          /elements:
            displayName: dataElements
            get:
              is: [ secured, paginated, sorted ]
              description: Get all data elements.
              responses:
                200:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                      schema: dataElementPage
                401:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
            post:
              is: [ secured ]
              description: Add new data element.
              body:
                application/json:
                  schema: dataElement
              responses:
                201:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                      schema: dataElement
                400:
                  body:
                    application/json:
                      schema: localizedErrorResponse
                401:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
            /{id}:
              uriParameters:
                id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
              get:
                is: [ secured ]
                description: Get data element configuration.
                responses:
                  200:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                        schema: dataElement
                  404:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                  401:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                  403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
              put:
                is: [ secured ]
                description: Change data element parameters.
                body:
                  application/json:
                    schema: dataElement
                responses:
                  200:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                        schema: dataElement
                  400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                  401:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                  403:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                  404:
                    body:
                      application/json:
                        schema: localizedErrorResponse
              delete:
                is: [ secured ]
                description: Completely removes data element. This action is not recoverable.
                responses:
                  204:
                    headers:
                      Keep-Alive:
                  400:
                    body:
                      application/json:
                        schema: localizedErrorResponse
                  401:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                  404:
                    headers:
                      Keep-Alive:
                    body:
                      application/json:
                        schema: localizedErrorResponse
              /auditLog:
                description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
                get:
                  description: Returns all or part of the resource's audit log
                  # Although /auditLog endpoints support "page" and "number" query parameters for pagination,
                  # they donâ€™t return the response body and set of pagination-related values expected to be
                  # returned for core domain resources.
                  is: [ paginated ]
                  queryParameters:
                    author:
                      displayName: author
                      description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
                      type: string
                      required: false
                      repeat: false
                    changedPropertyName:
                      displayName: changedPropertyName
                      description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
                      type: string
                      required: false
                      repeat: false
                  responses:
                    200:
                      headers:
                        Keep-Alive:
                      body:
                        application/json:
                          schema: auditLogEntryArray
                          example: |
                            [
                              {
                                "changeType": "ValueChange",
                                "globalId": {
                                  "entity": "org.openlmis.SomeClass",
                                  "cdoId": 1
                                },
                                "commitMetadata": {
                                  "author": "SomeUserName",
                                  "properties": [],
                                  "commitDate": "2016-12-17T19:39:57.621",
                                  "id": 3
                                },
                                "property": "PropertyName",
                                "left": "OldValue",
                                "right": "NewValue"
                              }
                            ]
                    404:
                      description: The specified <<resourcePathName|!singularize>> does not exist.
                      headers:
                        Keep-Alive:
                      body:
                        application/json:
                          schema: localizedErrorResponse
                    401:
                      headers:
                        Keep-Alive:
                      body:
                        application/json:
          /dhisElements:
            displayName: dhisDataElements
            get:
              is: [ secured, paginated, sorted ]
              description: Get all dhis data elements.
              responses:
                200:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                      schema: dhisDataElementPage
                401:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                403:
                  body:
                    application/json:
                      schema: localizedErrorResponse
          /auditLog:
            description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
            get:
              description: Returns all or part of the resource's audit log
              # Although /auditLog endpoints support "page" and "number" query parameters for pagination,
              # they donâ€™t return the response body and set of pagination-related values expected to be
              # returned for core domain resources.
              is: [ paginated ]
              queryParameters:
                author:
                  displayName: author
                  description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
                  type: string
                  required: false
                  repeat: false
                changedPropertyName:
                  displayName: changedPropertyName
                  description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
                  type: string
                  required: false
                  repeat: false
              responses:
                200:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                      schema: auditLogEntryArray
                      example: |
                        [
                          {
                            "changeType": "ValueChange",
                            "globalId": {
                              "entity": "org.openlmis.SomeClass",
                              "cdoId": 1
                            },
                            "commitMetadata": {
                              "author": "SomeUserName",
                              "properties": [],
                              "commitDate": "2016-12-17T19:39:57.621",
                              "id": 3
                            },
                            "property": "PropertyName",
                            "left": "OldValue",
                            "right": "NewValue"
                          }
                        ]
                404:
                  description: The specified <<resourcePathName|!singularize>> does not exist.
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
                      schema: localizedErrorResponse
                401:
                  headers:
                    Keep-Alive:
                  body:
                    application/json:
      /dhisDatasets:
        displayName: dhis datasets
        get:
          is: [ secured ]
          description: Get all dhis datasets.
          responses:
            200:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: dhisDatasetList
            401:
              headers:
                Keep-Alive:
              body:
                application/json:
            403:
              body:
                application/json:
                  schema: localizedErrorResponse
      /categoryOptionCombos:
        displayName: categoryOptionCombos
        get:
          is: [ secured, paginated, sorted ]
          description: Get all category option combos.
          responses:
            200:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: categoryOptionComboPage.json
            401:
              headers:
                Keep-Alive:
              body:
                application/json:
            403:
              body:
                application/json:
                  schema: localizedErrorResponse
            404:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedErrorResponse
      /auditLog:
        description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
        get:
          description: Returns all or part of the resource's audit log
          # Although /auditLog endpoints support "page" and "number" query parameters for pagination,
          # they donâ€™t return the response body and set of pagination-related values expected to be
          # returned for core domain resources.
          is: [ paginated ]
          queryParameters:
            author:
              displayName: author
              description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
              type: string
              required: false
              repeat: false
            changedPropertyName:
              displayName: changedPropertyName
              description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
              type: string
              required: false
              repeat: false
          responses:
            200:
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: auditLogEntryArray
                  example: |
                    [
                      {
                        "changeType": "ValueChange",
                        "globalId": {
                          "entity": "org.openlmis.SomeClass",
                          "cdoId": 1
                        },
                        "commitMetadata": {
                          "author": "SomeUserName",
                          "properties": [],
                          "commitDate": "2016-12-17T19:39:57.621",
                          "id": 3
                        },
                        "property": "PropertyName",
                        "left": "OldValue",
                        "right": "NewValue"
                      }
                    ]
            404:
              description: The specified <<resourcePathName|!singularize>> does not exist.
              headers:
                Keep-Alive:
              body:
                application/json:
                  schema: localizedErrorResponse
            401:
              headers:
                Keep-Alive:
              body:
                application/json:
  /execute:
    post:
      is: [ secured ]
      description: Run execution
      body:
        application/json:
      responses:
        201:
          headers:
            Keep-Alive:
          body:
            application/json:
        400:
          body:
            application/json:
              schema: localizedErrorResponse
        401:
          headers:
            Keep-Alive:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse